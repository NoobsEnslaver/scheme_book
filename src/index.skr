;;; -*- coding: utf-8; tab-width: 4; c-basic-offset: 2; indent-tabs-mode: nil; -*-
(use-modules (skribilo engine)
             (skribilo package polyglossia-russian)
             (skribilo package minted)
             (skribilo writer)
             (ice-9 string-fun))

;; TODO: вынести
(define* (src-lite :key line . body)
  (prog :line line
        (source :language scheme body)))

(define* (src . body)
  (frame :width 100.0 :margin 0 :minted-frame-type 'leftline
         (src-lite :line #t body)))

(define* (include-src path
                      :optional (from #f)
                                (to* #f)
                      :key (definition #f))
  (let ((to (cond
             (to* to*)
             ((string? from) (string-replace-substring from "#|+" "#|-"))
             (else from))))
    (frame :width 100.0 :minted-frame-type 'leftline
           (prog :line #t
            (source :language scheme :file path :start from :stop to :definition definition)))))

(define (chapter-image path)
    (flush :side 'left (image :file path :width 25.0)))

;; Конфигурируем ядро latex
(let ((le (find-engine 'latex)))
  (define (opt-append key val)
    (if (string? (engine-custom le key))
        (engine-custom-set! le key (string-append "\n" val (engine-custom le key) "\n"))
        (engine-custom-set! le key val)))

    (engine-custom-set! le 'class-has-chapters? #t)
    (engine-custom-set! le 'image-engine 'graphicx)
    (engine-custom-set! le 'toc-depth 'section)
    (engine-custom-set! le 'documentclass "\\documentclass[12pt,fleqn,oneside]{book}\n")
    (opt-append 'usepackage "\\usepackage[margin=0.8in]{geometry}")
    (opt-append 'predocument "\\usemintedstyle{default}"))


;; Конфигурируем ядро html
(let ((he (find-engine 'html)))
   (engine-custom-set! he 'charset "UTF-8"))

(bibliography "src/bibliography.sbib")

(document
   :title "Язык программирования Scheme, 4-е издание"
   :html-title "Язык программирования Scheme, 4-е издание"
   :author "R. Kent Dybvig"
   :keywords '("Scheme" "язык программирования")
   (p (image :file "images/cover.png" :width 100.0))
   (toc :chapter #t :section #t :subsection #f)

   (include "src/chapters/preface.skb")
   (include "src/chapters/introduction.skb")
   (include "src/chapters/getting_started.skb")
   (include "src/chapters/going_further.skb")
   (include "src/chapters/procedures_and_variable_bindings.skb")
   (include "src/chapters/control_operations.skb")
   (include "src/chapters/operations_on_objects.skb")
   (include "src/chapters/input_and_output.skb")
   (include "src/chapters/syntactic_extension.skb")
   (include "src/chapters/records.skb")
   (include "src/chapters/libraries_and_top-level_programs.skb")
   (include "src/chapters/exceptions_and_conditions.skb")
   (include "src/chapters/extended_examples.skb")
   (include "src/chapters/references.skb")
   (include "src/chapters/answers_to_selected_exercises.skb")
   (include "src/chapters/formal_syntax.skb")
   (include "src/chapters/summary_of_forms.skb")
   (include "src/chapters/index.skb"))
